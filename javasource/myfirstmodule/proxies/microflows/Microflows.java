// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package myfirstmodule.proxies.microflows;

import java.util.HashMap;
import java.util.Map;
import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.MendixRuntimeException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class Microflows
{
	// These are the microflows for the MyFirstModule module
	public static void aCT_createEmployee(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "MyFirstModule.ACT_createEmployee", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void aCT_Employee_SaveChanges(IContext context, myfirstmodule.proxies.Employee _employee)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Employee", _employee == null ? null : _employee.getMendixObject());
			Core.execute(context, "MyFirstModule.ACT_Employee_SaveChanges", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void aCT_ShowLogin(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "MyFirstModule.ACT_ShowLogin", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<myfirstmodule.proxies.Employee> dS_Get_AllEmployees(IContext context, myfirstmodule.proxies.Department _selectedDepartment)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SelectedDepartment", _selectedDepartment == null ? null : _selectedDepartment.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "MyFirstModule.DS_Get_AllEmployees", params);
			java.util.List<myfirstmodule.proxies.Employee> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<myfirstmodule.proxies.Employee>();
				for (IMendixObject obj : objs)
					result.add(myfirstmodule.proxies.Employee.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static myfirstmodule.proxies.Employee dS_GetCurrentUser(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			IMendixObject result = (IMendixObject)Core.execute(context, "MyFirstModule.DS_GetCurrentUser", params);
			return result == null ? null : myfirstmodule.proxies.Employee.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
}